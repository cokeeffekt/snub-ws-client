{"version":3,"file":"snub-ws-client.esm.js","sources":["../src/worker.js","../src/index.js"],"sourcesContent":["const worker = (function (root) {\n  // Store connected ports in case this is a SharedWorker\n  const ports = [];\n  let currentSocket = null;\n\n  let postToMain = () => {};\n  let config = {};\n  // Check if we are in a Worker context or the main thread\n  const isWorkerContext =\n    typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope;\n  const isSharedWorkerContext =\n    typeof SharedWorkerGlobalScope !== 'undefined' &&\n    self instanceof SharedWorkerGlobalScope;\n\n  if (isSharedWorkerContext) {\n    // Running in a SharedWorker context\n    self.onconnect = function (e) {\n      const port = e.ports[0];\n      ports.push(port);\n\n      port.onmessage = handleIncomingMessage;\n      port.start();\n      postMessage(['_internal:connected']);\n    };\n  } else if (isWorkerContext) {\n    // Running in a Worker context\n    self.onmessage = handleIncomingMessage;\n    postMessage(['_internal:connected']);\n  }\n\n  return {\n    postToMain: (fn) => (postToMain = fn), // set the postMessage function for the main thread\n    handleIncomingMessage,\n    ready() {\n      postMessage(['_internal:connected']);\n    },\n  };\n\n  // Utility function to send a message in worker or main thread\n  function postMessage(msg) {\n    msg = JSON.stringify(msg);\n    if (isSharedWorkerContext) {\n      // Post message to all connected ports\n      ports.forEach((port) => port.postMessage(msg));\n    } else if (isWorkerContext) {\n      // Post message to the main script\n      self.postMessage(msg);\n    } else {\n      // Call the main thread handler\n      postToMain({ data: msg });\n    }\n  }\n\n  // Common functionality that runs in both the workers and main thread\n  function handleIncomingMessage(msg) {\n    const [event, payload] = JSON.parse(msg.data);\n    if (event === '_config') {\n      config = { ...config, ...payload };\n    }\n    if (event === '_connect') {\n      connectSocket(payload);\n    }\n    if (event === '_close') {\n      if (currentSocket) {\n        currentSocket.close(...payload);\n      }\n    }\n    if (event === '_send') {\n      if (currentSocket) {\n        currentSocket.send(JSON.stringify(payload));\n      }\n    }\n  }\n\n  async function connectSocket(auth) {\n    if (currentSocket) {\n      // close socket and wait for the socket to close asychronously\n      currentSocket.close();\n      await new Promise((resolve) => {\n        currentSocket.onclose = () => {\n          resolve();\n        };\n      });\n    }\n\n    currentSocket = new WebSocket(config.url);\n\n    currentSocket.onopen = () => {\n      currentSocket.send(JSON.stringify(['_auth', auth]));\n    };\n    currentSocket.onmessage = (event) => {\n      const [key, payload] = JSON.parse(event.data);\n      if (key === '_acceptAuth') {\n        return postMessage(['_internal:socket-connect', payload]);\n      }\n      return postMessage([key, payload]);\n    };\n    currentSocket.onclose = (event) => {\n      console.log(event);\n      // https://github.com/Luka967/websocket-close-codes\n      postMessage(['_internal:socket-disconnected', {\n        code: event.code,\n        reason: event.reason,\n      }]);\n      currentSocket = null;\n    };\n    currentSocket.onerror = (error) => {\n      console.error('Snub-Ws-Socket => Socket error:', error);\n    };\n  }\n})(typeof self !== 'undefined' ? self : this);\n\nexport default {\n  postMessage: worker.handleIncomingMessage,\n  postToMain: worker.postToMain,\n  ready: worker.ready,\n};\n","import workerScriptUrl from './worker.js'; // Will be a data URL if inlined\n\nconst DEFAULT_CONFIG = {\n  workerType: 'SHARED_WORKER', // 'SHARED_WORKER', 'WEB_WORKER', 'MAIN_THREAD'\n  workerName: 'Snub-Ws-Client-Worker',\n  url: 'ws://localhost:8080',\n  replyTimeout: 10000,\n};\nexport default class SnubWsClient {\n  #workerType = null;\n  #worker = null;\n  #config = DEFAULT_CONFIG;\n  #state = 'init';\n  #pendingConnect = null;\n  #waitingReplies = new Map();\n\n  // Event handlers\n  #onmessage = () => {};\n  #onopen = () => {};\n  #onclose = () => {};\n\n  constructor(config) {\n    this.#config = { ...DEFAULT_CONFIG, ...config };\n    // start the worker\n    this.#worker = this.#startWorker();\n    JSONifyWorker(this.#worker); // JSONify the worker\n    this.#worker.onmessage = (event) => {\n      const [key, value] = JSON.parse(event.data);\n      if (key === '_internal:connected') {\n        this.#worker.postMessage([\n          '_config',\n          {\n            url: this.#config.url,\n          },\n        ]);\n        this.#state = 'READY';\n        if (this.#pendingConnect) this.connect(this.#pendingConnect);\n        this.#pendingConnect = null;\n      }\n      if (key === '_internal:socket-disconnected') {\n        this.#onclose(value);\n      }\n      if (key === '_internal:socket-connect') {\n        this.#onopen(value);\n      }\n      if (key.startsWith('_internal:')) return;\n      if (key.startsWith('_r:')) {\n        const [resolve, reject, timeout] = this.#waitingReplies.get(key);\n        if (resolve) {\n          resolve(value);\n          this.#waitingReplies.delete(key);\n          clearTimeout(timeout);\n        }\n        return;\n      }\n      this.#onmessage(key, value);\n    };\n  }\n\n  send(event, payload) {\n    this.#worker.postMessage(['_send', [event, payload]]);\n  }\n  fetch(event, payload) {\n    return new Promise((resolve, reject) => {\n      const uid = '_r:' + generateUID();\n      const timeout = setTimeout(() => {\n        reject(new Error('Timeout'));\n        this.#waitingReplies.delete(uid);\n      }, this.#config.replyTimeout);\n      this.#waitingReplies.set(uid, [resolve, reject, timeout]);\n      this.#worker.postMessage(['_send', [event, payload, uid]]);\n    });\n  }\n\n  connect(auth) {\n    if (this.#state === 'READY') {\n      this.#worker.postMessage(['_connect', auth]);\n    } else {\n      this.#pendingConnect = auth;\n    }\n  }\n\n  close(code, reason) {\n    this.#worker.postMessage(['_close', [code, reason]]);\n  }\n\n  onopen(fn) {\n    this.#onopen = fn;\n  }\n  onmessage(fn) {\n    this.#onmessage = fn;\n  }\n\n  onclose(fn) {\n    this.#onclose = fn;\n  }\n\n  // Private functions\n  #startWorker() {\n    // Check if SharedWorker is supported\n    if (\n      typeof SharedWorker !== 'undefined' &&\n      !['WEB_WORKER', 'MAIN_THREAD'].includes(this.#config.workerType)\n    ) {\n      try {\n        const sharedWorker = new SharedWorkerWrapper(workerScriptUrl, {\n          type: 'module',\n          name: this.#config.workerName,\n        });\n        this.#workerType = 'sharedWorker';\n        return sharedWorker;\n      } catch (e) {}\n    }\n\n    // Check if Web Worker is supported\n    if (\n      typeof Worker !== 'undefined' &&\n      !['MAIN_THREAD'].includes(this.#config.workerType)\n    ) {\n      try {\n        const webWorker = new Worker(workerScriptUrl, {\n          type: 'module',\n          name: this.#config.workerName,\n        });\n        this.#workerType = 'webWorker';\n        return webWorker;\n      } catch (e) {}\n    }\n\n    // Fallback to running in the main thread\n    this.#workerType = 'mainThread';\n\n    const mainThreadWorker = {\n      postMessage: function (message) {},\n      onmessage: function (event) {},\n    };\n    // Load the worker script in the main thread\n    import(workerScriptUrl)\n      .then((module) => {\n        mainThreadWorker.postMessage = (msg) => {\n          module.default.postMessage({ data: JSON.stringify(msg) });\n        };\n        mainThreadWorker.postToMain = module.default.postToMain((msg) => {\n          mainThreadWorker.onmessage(msg);\n        });\n        module.default.ready();\n      })\n      .catch((error) => {\n        console.error('Failed to load worker script:', error);\n      });\n\n    return mainThreadWorker;\n  }\n}\n\nclass SharedWorkerWrapper {\n  constructor(url, options) {\n    this.worker = new SharedWorker(url, options); // Load SharedWorker\n    this.port = this.worker.port;\n\n    // Start the port for communication\n    this.port.start();\n\n    // Proxy the onmessage event\n    this.port.onmessage = (event) => {\n      if (typeof this.onmessage === 'function') {\n        this.onmessage(event); // Call the main thread's onmessage handler\n      }\n    };\n\n    // Optional: Proxy onerror handling\n    this.port.onerror = (error) => {\n      if (typeof this.onerror === 'function') {\n        this.onerror(error); // Call the main thread's onerror handler\n      }\n    };\n  }\n\n  postMessage(message) {\n    this.port.postMessage(message);\n  }\n\n  terminate() {\n    this.port.close(); // Close the port to stop communication\n  }\n}\n\nfunction JSONifyWorker(worker) {\n  worker._postMessage = worker.postMessage;\n  worker.postMessage = function (message) {\n    worker._postMessage(JSON.stringify(message));\n  };\n}\n\nfunction generateUID() {\n  let firstPart = (Math.random() * 46656) | 0;\n  let secondPart = (Math.random() * 46656) | 0;\n  firstPart = ('000' + firstPart.toString(36)).slice(-3);\n  secondPart = ('000' + secondPart.toString(36)).slice(-3);\n  return firstPart + secondPart;\n}\n"],"names":[],"mappings":"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"}